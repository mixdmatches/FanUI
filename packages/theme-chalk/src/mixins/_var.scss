@use 'sass:map';
@use 'sass:color';

@use 'config';
@use 'function' as *;
@use '../common/var' as *;

// set css var value, because we need translate value to string
// for example:
// @include set-css-var-value(('color', 'primary'), red);
// --el-color-primary: red;
@mixin set-css-var-value($name, $value) {
  #{joinVarName($name)}: #{$value};
}

// @include set-css-var-type('color', 'primary', $map);
// --el-color-primary: #{map.get($map, 'primary')};
@mixin set-css-var-type($name, $type, $variables) {
  #{getCssVarName($name, $type)}: #{map.get($variables, $type)};
}

@mixin set-css-color-type($colors, $type) {
  @include set-css-var-value(('color', $type), map.get($colors, $type, 'base'));

  @each $i in (3, 5, 7, 8, 9) {
    @include set-css-var-value(
      ('color', $type, 'light', $i),
      map.get($colors, $type, 'light-#{$i}')
    );
  }

  @include set-css-var-value(
    ('color', $type, 'dark-2'),
    map.get($colors, $type, 'dark-2')
  );
}

// set all css var for component by map
// 通过映射为组件设置所有 CSS 变量
@mixin set-component-css-var($name, $variables) {
  // 遍历 $variables 映射中的每个键值对，$attribute 是键，$value 是对应的值
  @each $attribute, $value in $variables {
    // 如果键 $attribute 的值为 'default'
    @if $attribute == 'default' {
      // 生成一个不带后缀的 CSS 变量，变量名由 $name 生成，值为 $value
      #{getCssVarName($name)}: #{$value};
    } @else {
      // 生成一个带后缀的 CSS 变量，变量名由 $name 和 $attribute 生成，值为 $value
      #{getCssVarName($name, $attribute)}: #{$value};
    }
  }
}

@mixin set-css-color-rgb($type) {
  $color: map.get($colors, $type, 'base');
  @include set-css-var-value(
    ('color', $type, 'rgb'),
    #{color.channel($color, 'red'),
    color.channel($color, 'green'),
    color.channel($color, 'blue')}
  );
}

// generate css var from existing css var
// for example:
// @include css-var-from-global(('button', 'text-color'), ('color', $type))
// --el-button-text-color: var(--el-color-#{$type});
@mixin css-var-from-global($var, $gVar) {
  $varName: joinVarName($var);
  $gVarName: joinVarName($gVar);
  #{$varName}: var(#{$gVarName});
}
