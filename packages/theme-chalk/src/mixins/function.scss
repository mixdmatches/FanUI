@use 'config';
@use 'sass:meta';
@use 'sass:string';

// BEM support Func
/**
 * 检查选择器是否包含特殊的 BEM 修饰符、伪类或伪元素。
 * @param $selector 要检查的选择器。
 * @return 
*/
@function selectorToString($selector) {
  $selector: meta.inspect($selector); // 将选择器转换为字符串
  $selector: string.slice($selector, 2, -2); // 去除字符串首尾引号
  @return $selector;
}

// 检查选择器是否包含修饰符分隔符。
@function containsModifier($selector) {
  $selector: selectorToString($selector);

  @if string.index($selector, config.$modifier-separator) {
    @return true;
  } @else {
    @return false;
  }
}

// 检查选择器是否包含状态前缀。
@function containWhenFlag($selector) {
  $selector: selectorToString($selector);

  @if string.index($selector, '.' + config.$state-prefix) {
    @return true;
  } @else {
    @return false;
  }
}

// 检查选择器是否包含伪类
@function containPseudoClass($selector) {
  $selector: selectorToString($selector);

  @if string.index($selector, ':') {
    @return true;
  } @else {
    @return false;
  }
}

// 检查选择器是否满足任何特殊嵌套规则。
@function hitAllSpecialNestRule($selector) {
  @return containsModifier($selector) or containWhenFlag($selector) or containPseudoClass($selector);
}

// join var name
// joinVarName(('button', 'text-color')) => '--el-button-text-color'
// 将列表中的元素拼接成 CSS 变量名。
@function joinVarName($list) {
  $name: '--' + config.$namespace;
  @each $item in $list {
    @if $item != '' {
      $name: $name + '-' + $item;
    }
  }
  @return $name;
}

// getCssVarName('button', 'text-color') => '--el-button-text-color'
// 获取 CSS 变量名。
@function getCssVarName($args...) {
  @return joinVarName($args);
}

// getCssVar('button', 'text-color') => var(--el-button-text-color)
// 功能：获取 CSS 变量表达式。
@function getCssVar($args...) {
  @return var(#{joinVarName($args)});
}

// getCssVarWithDefault(('button', 'text-color'), red) => var(--el-button-text-color, red)
// 获取带有默认值的 CSS 变量表达式。
@function getCssVarWithDefault($args, $default) {
  @return var(#{joinVarName($args)}, #{$default});
}

// bem('block', 'element', 'modifier') => 'el-block__element--modifier'
// 根据 BEM 命名规范生成类名。
@function bem($block, $element: '', $modifier: '') {
  $name: config.$namespace + config.$common-separator + $block;

  @if $element != '' {
    $name: $name + config.$element-separator + $element;
  }

  @if $modifier != '' {
    $name: $name + config.$modifier-separator + $modifier;
  }

  // @debug $name;
  @return $name;
}
